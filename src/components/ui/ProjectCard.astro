---
// src/components/ui/ProjectCard.astro
import type { CollectionEntry } from 'astro:content';
import Tag from '@components/ui/Tag.astro';
import Icon from '@components/utility/Icon.astro';
import Button from '@components/ui/Button.astro';

/**
 * Project Card Component
 *
 * Displays a preview of a single project, used on the homepage and
 * portfolio index. It features a hover-to-play video for an engaging
 * user experience, with an accessible fallback for users who prefer
 * reduced motion.
 *
 * Props:
 * - `project`: The full data object for a project from the content collection.
 */

// --- PROPS ---
export interface Props {
  /** The project data from the Astro content collection. */
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const { slug, data } = project;
const { title, summary, tags, media, hasPrototype, prototypeUrl, repoUrl } = data;

// Shared classes for the small action buttons on the card.
const buttonClasses = 'text-xs px-4 py-2';
---

<article class="group px-3 pb-3  relative flex flex-col bg-surfaceSecondary shadow-sm">
  <div class="flex items-center justify-center h-3 pb-3"><div class="justify-center  h-3 w-12"></div></div>
  <!-- Media container for image and hover video -->
  <div class="relative bg-background">
    <a href={`/portfolio/${slug}/`} class="focus-ring block overflow-hidden rounded-sm">
      <!-- Fallback Thumbnail Image -->
      <!-- This is always present for layout stability and as a poster. -->
      {
        media.thumbnailImage && (
          <img
            src={media.thumbnailImage}
            alt={media.alt}
            width="1600"
            height="900"
            class="aspect-video w-full object-cover transition-opacity duration-300"
            loading="eager"
          />
        )
      }

      <!-- Hover Video -->
      <!-- The video is hidden by default and is revealed on hover (if not reduced motion). -->
      {
        media.hoverVideo && (
          <video
            width="1600"
            height="900"
            muted
            loop
            playsinline
            preload="metadata"
            class="project-video pointer-events-none absolute inset-0 h-full w-full object-cover opacity-0 transition-opacity duration-300 group-hover:opacity-100"
            aria-hidden="true"
          >
            <source src={media.hoverVideo} type="video/webm" />
            <source src={media.hoverVideo.replace('.webm', '.mp4')} type="video/mp4" />
          </video>
        )
      }

      <!-- Play Indicator -->
      <!-- This 'â–º' symbol indicates that a hover video is available. -->
      {
        media.hoverVideo && (
          <div
            class="play-indicator absolute left-2 top-2 z-10 flex h-6 w-8 items-center justify-center rounded-none bg-black text-white opacity-60 transition-opacity duration-300 group-hover:opacity-90"
            aria-hidden="true"
          >
            <Icon name="play" class="h-4 w-4" />
          </div>
        )
      } 
    </a>
  </div>
  <div class="pt-4"></div>
  <!-- Content section -->
  <div class="flex flex-grow flex-col">
    <h3 class="font-heading text-2xl font-bold">
      <a href={`/portfolio/${slug}/`} class="focus-ring hover:text-accent">
        {title}
      </a>
    </h3>

    <!-- Project Tags -->
    {
      tags && (
        <div class="order-first flex flex-wrap gap-2">
          {tags.map((tag) => (
            <Tag name={tag} />
          ))}
        </div>
      )
    }

    <p class="mt-2 flex-grow text-textSecondary">{summary}</p>

    <!-- Action Links -->
    <div class="mt-4 flex flex-wrap items-center gap-2 font-mono">
      <Button
        href={`/portfolio/${slug}/`}
        variant="tertiary"
        iconRight="arrowLeftRight"
        class={buttonClasses}
      >
        see the process
      </Button>
      {
        hasPrototype && prototypeUrl && (
          <Button
            href={prototypeUrl}
            target="_blank"
            rel="noopener noreferrer"
            variant="tertiary"
            iconRight="externalLink"
            class={buttonClasses}
          >
            try prototype
          </Button>
        )
      }
      {
        repoUrl && (
          <Button
            href={repoUrl}
            target="_blank"
            rel="noopener noreferrer"
            variant="tertiary"
            iconRight="github"
            class={buttonClasses}
          >
            View Repo
          </Button>
        )
      }
    </div>
  </div>
</article>

<script>
  // This script handles the hover-to-play video functionality.
  document.addEventListener('DOMContentLoaded', () => {
    // Check if the user prefers reduced motion.
    const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');

    function handleHoverVideo() {
      if (motionQuery.matches) {
        // If reduced motion is enabled, do nothing. The image fallback is sufficient.
        return;
      }

      // Find all project cards on the page.
      const projectCards = document.querySelectorAll('.group');

      projectCards.forEach((card) => {
        const video = card.querySelector<HTMLVideoElement>('.project-video');
        if (!video) return;

        // When the mouse enters the card, play the video.
        card.addEventListener('mouseenter', () => {
          video.play().catch((e) => console.error('Video play failed:', e));
        });

        // When the mouse leaves the card, pause the video and reset its time.
        card.addEventListener('mouseleave', () => {
          video.pause();
          video.currentTime = 0;
        });
      });
    }

    // Initialize the functionality.
    handleHoverVideo();
    // Also re-evaluate if the user changes their motion preference.
    motionQuery.addEventListener('change', handleHoverVideo);
  });
</script>
