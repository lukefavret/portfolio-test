---
// src/pages/portfolio/[slug].astro
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '@layouts/BaseLayout.astro';
import MetaBar from '@components/ui/MetaBar.astro';
import HeroFigure from '@components/ui/HeroFigure.astro';
import Button from '@components/ui/Button.astro';

/**
 * Dynamic Case Study Page
 *
 * This file is a dynamic route that generates a page for each project
 * in the `projects` content collection. It uses `getStaticPaths` to
 * create the routes at build time.
 *
 * The page is composed of two main content parts:
 * 1. The project's summary and metadata, from `index.md`.
 * 2. The detailed case study, from `case-study.md`.
 *
 * The layout is designed to resemble an editorial or patent document,
 * with a clear, structured presentation of the project's details.
 */

// This function tells Astro which pages to build.
export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

// --- PROPS ---
// The `project` prop is passed from `getStaticPaths`.
type Props = {
  project: CollectionEntry<'projects'>;
};

const { project } = Astro.props;
const { Content } = await project.render();
const { title, summary, date, discipline, displayedDate, media } = project.data;

// Astro.glob imports all .md files that match the pattern.
// This is how we can get the content for the separate case study file.
const caseStudies = await Astro.glob('../../content/projects/*/case-study.md');

// We find the specific case study for this project by matching the slug
// from the URL against the file path of the case study.
const caseStudy = caseStudies.find(
  (study) => study.file.includes(`/${project.slug}/`)
);

// Format the date for display in the MetaBar.
const formattedPublishDate = date.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
});
---

<BaseLayout title={title} description={summary}>
  <div class="max-w-7xl pt-8 mx-auto w-full"></div>
  <article class="max-w-7xl py-0 mx-auto w-full extended-borders">
    <!-- Metadata Bar at the top of the page. -->
    <MetaBar
      discipline={discipline}
      publishedDate={`Published ${formattedPublishDate}`}
    />

    <div class="mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8">
      <!-- Project Header -->
      <header class="text-center">
        <h1 class="font-headingSpecial text-4xl font-bold tracking-wider sm:text-5xl">
          {title}
        </h1>
        <p class="mt-2 font-mono text-lg text-textSecondary">
          {displayedDate || formattedPublishDate}
        </p>
      </header>

      <!-- Hero Media -->
      <HeroFigure
        figNumber="2"
        caption={media.alt}
      >
        <img src={media.thumbnailImage} alt={media.alt} class="w-full h-auto" />
      </HeroFigure>

      <!-- STAR Overview Section (from the index.md file) -->
      <div id="star-overview" class="prose prose-lg mx-auto max-w-prose">
        <Content />
      </div>

      <!--
        The <details> element provides an accessible, CSS-only "accordion"
        for showing and hiding the full case study. No client-side JS is needed.
        The <summary> element is the clickable "button". We use `list-none` to
        remove the default disclosure triangle.
      -->
      <details class="group mt-16" id="full-case-study-details">
        <summary class="list-none">
          <div class="text-center">
            <Button as="div" variant="primary" iconRight="arrowDown" class="group-open:hidden">
              Unroll Detailed Case Study
            </Button>
          </div>
        </summary>

        <div class="mt-8">
          <hr class="editorial-rule mt-16" />

          <!-- Full Case Study Section (from case-study.md) -->
          <section id="full-case-study" aria-labelledby="full-case-study-heading">
            <h2
              id="full-case-study-heading"
              class="font-heading text-3xl font-bold"
            >
              fig. 3. Full Case Study
            </h2>
            <div class="prose prose-lg mx-auto mt-8 max-w-prose">
              {caseStudy && <caseStudy.Content />}
            </div>
          </section>
        </div>
      </details>
    </div>
  </article>
</BaseLayout>

<style is:global>
  /*
    Simple prose styling for the Markdown content.
    This can be expanded with a typography plugin like `@tailwindcss/typography`.
  */
  .prose h2 {
    font-family: theme('fontFamily.heading');
    font-size: 1.5rem; /* 24px */
    font-weight: 700;
  }
  .prose p {
    font-family: theme('fontFamily.body');
    margin-bottom: 1em;
  }
  .prose strong {
    font-weight: 700;
  }
  .prose ul {
    list-style-type: disc;
    padding-left: 1.5em;
    margin-bottom: 1em;
  }
</style>
